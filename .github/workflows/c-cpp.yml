name: C/C++ CI

on: [push, pull_request]

jobs:
  format-check:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Format check
        run: .github/format-check.sh

  build:
    needs: [format-check]
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest]
        config: [Release]
        include:
          - os: macos-latest
            cache_path: ~/Library/Caches/ccache
            extra_cmake_args: 
            cmake_preset: macos-ninja

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Set up build environment (macos-latest)
        run: |
          brew install ccache ninja create-dmg
          brew install boost openssl@3 molten-vk
          echo "/$(brew --prefix)/opt/ccache/libexec" >> $GITHUB_PATH
          ccache --set-config=compiler_check=content
        if: matrix.os == 'macos-latest'

      - name: Ccache setup
        run: ccache -z

      - name: CMake
        run: |
          cmake ${{ matrix.extra_cmake_args }} --preset ${{ matrix.cmake_preset }}
          cmake --build build/${{ matrix.cmake_preset }} --config ${{ matrix.config }}

      - name: CTest
        working-directory: build/${{ matrix.cmake_preset }}
        run: ctest --build-config ${{ matrix.config }} --output-on-failure

      - name: Compute git short sha
        shell: bash
        run: echo "git_short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Ccache statistics
        run: ccache -s  
        
      - name: Create DMG (macos-latest)
        run: |
          cd build/${{ matrix.cmake_preset }}/bin/${{ matrix.config }}
          create-dmg \
            --volname "Vita3K Installer" \
            --volicon Vita3K.app/Contents/Resources/Vita3K.icns \
            --window-size 500 300 \
            --icon-size 100 \
            --icon Vita3K.app 120 115 \
            --app-drop-link 360 115 \
            vita3k-${{ env.git_short_sha }}-${{ matrix.os }}.dmg \
            Vita3K.app
          rm -rf Vita3K.app
        if: matrix.os == 'macos-latest'

      - uses: actions/upload-artifact@v4
        with:
          name: vita3k-${{ env.git_short_sha }}-${{ matrix.os }}
          # path is set up to be <binary_dir>/bin/<config_type> since that's how multi-config
          # generators work on CMake
          path: build/${{ matrix.cmake_preset }}/bin/${{ matrix.config }}

    outputs:
      BuildTag: ${{ env.build_variable }}
